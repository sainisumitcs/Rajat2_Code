-------------------------------------------------------------------------------
--           P O L Y H E D R A    D E M O
--           Copyright (C) 2005-2014 Enea Software AB
-------------------------------------------------------------------------------
-- 	Filename      : poly.cfg
-- 	Description   : config file
-- 	Author        : Nigel Day
--
--      CVSID         : $Id: poly.cfg,v 1.5 2014/07/23 20:23:11 nigel Exp $
-------------------------------------------------------------------------------
-- NOTE: this is ILLUSTRATIVE CODE, provided on an 'as is' basis to help
-- demonstrate one or more features of the Polyhedra product. 
-- It may well need adaption for use in a live installation, and
-- Enea Software AB and its agents and distributors do not warrant this code.
-------------------------------------------------------------------------------

common:
data_service   = 8001

-------------------------------------------------------------------------------
--
-- Database resources - empty, db, sqlc
--
-- these entries allow for database startup and inspection
--
-------------------------------------------------------------------------------

empty:common
type = rtrdb
suppress_log   = true
suppress_dvi   = true
disable_cl     = true

db:empty
load_file      = test.dat

-- SQLC resources

sql:common
type           = sqlc

-------------------------------------------------------------------------------
--
-- CLC resources
--
-- define the entry points used to run the inspect application, which inspects
-- the schema of a running database; the output depends on what resources are 
-- set, and the following entry points define 'useful' settings:
--
-- schemadump   produce an sql file that can set up a database with same schema
-- dumpschema   (and alternative name for schemadump)
--
-- checknames   see if any name clashes with an SQL, CL, C or C++ reserved word
--
-- html         produce an html file describing the schema
--
-- inspect      a combination of schemadump, checknames & html. 
--
-------------------------------------------------------------------------------

clbase:common
type                           = clc
root_class                     = schemata
cl_library                     = inspector,globals.cl
stub                           = db_
parallelops                    = 0
globalfetch                    = true
create_html                    = no
check_names                    = no
dump_schema                    = no
single_table_for_table_details = no
--
-- list the tables to skip, just to show how! In this case (unless
-- you alter it further) we shall skip most of the standard tables
-- including those defined by default by the Cl engine, the historian
-- submodule and the DVI submodule.
--
-- defining skip_table with += means that the previous definition is
-- extended rather than being replaced. skip_table is meant to take a
-- comma-separated list of names, but * is allowed as a wild card - 
-- so the presence of dvi_* instructs the application to skip any
-- table starting with dvi_.
--
skip_tables    = tables,views,attributes,indexes,indexattrs,
skip_tables   += journalcontrol,dbcontrol,sqlprocedure,
skip_tables   += clcontrol,exception,runtimeexception,
skip_tables   += udpmsg,udpport,tcpserver,tcpconnection,
skip_tables   += exceptionhandler,timer,dataport,dataservice,
skip_tables   += users,table_privileges,column_privileges,
skip_tables   += logcontrol,logcolumn,logdata,logextract,logarchive,
skip_tables   += loghistory,logaccess,logobject,logworker
--skip_tables += dvi_*

-- (define both dumpschema and schemadump as the same thing, 
-- so you don't have to remember which one to use!)

schemadump:clbase
dump_schema    = yes
dumpschema:schemadump

checknames:clbase
check_names    = yes

html:clbase
create_html    = yes

inspect:clbase
dump_schema         = yes
check_names         = yes
create_html         = yes
report_record_count = no

-------------------------------------------------------------------------------
-- some extra entry points used for testing purposes. 
-------------------------------------------------------------------------------

testinspect:inspect
--skip_tables      = +one,two,three,four,five
include_tables     = person,view_one,view_two

skippy:inspect
permitted_words = interval timestamp value

-------------------------------------------------------------------------------
--                        E n d   o f   f i l e
-------------------------------------------------------------------------------

